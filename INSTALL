			NOAAPORT INGEST INTERFACE TO LDM

INTRODUCTION:

    This package contains the source-code for the Unidata Program Center's
    software to insert NOAAPORT products into the LDM product queue. The
    LDM must be version 6.9 or later.

LEGAL:

    Licensing and copyright information are contained in the file
    COPYRIGHT, which is in the top-level source directory.

INFORMATION:

    This software is provided as an unsupported package. The Unidata Program
    Center has developed this software in order to provide NOAAPORT data
    via the LDM/IDD. 

INSTALLATION INSTRUCTIONS:

1) download the latest LDM version and install it according to instructions
   in the Unidata LDM web pages:

   http://www.unidata.ucar.edu/content/software/ldm/<version>/basics

   NOTES:

   - do not deviate from the installation instructions

   - we strongly recommend that the LDM be built under an account
     named 'ldm', but this is not a requirement

   - after a download, unpack, build, and install, the following
     directory structure will exist in the HOME directory of
     the user that build the LDM:

     runtime -> <version>        (e.g., runtime -> ldm-6.0.1)
     bin     -> runtime/bin
     include -> runtime/include
     lib     -> runtime/lib
     src     -> runtime/src

     This is _MANDATORY_ since it will be used in the noaaport build!

   - The pqing(1) code in the LDM will be updated in a future release
     to take account of the change in NOAAPORT model data naming
     (AVN -> GFS; ETA -> NAM). This package has already been modified 
     to use the NAM and GFS strings in model identification meta-tags. 
   
2) download the noaaport distribution (gzipped tar file) to
   the HOME directory of the account in which the LDM was built

3) unpack the gzipped tar file.  This will create a version
   specific directory (e.g., 'noaaport-1.0') in which the noaaport
   source-code will be put.

4) cd ~/noaaport-<version> and build and install the distribution:

   Example:

   cd ~/noaaport-x.x
   make install
   <become root>
   make install_setuids
   <exit from root>

   NOTES:

   - as previously pointed out, the build of the noaaport code
     depends on the LDM having been installed as per instructions in our
     LDM website.  The Makefile references the ../src, ../lib, and
     ../include directories, so installation of the LDM as per
     instructions and unpacking the readnoaaport code in a directory
     that is a peer of the LDM installation is mandatory.

   - the binary and shell executables used to read the DVB-S multicast
     stream, process the data into IDD streams, and inject the products
     into the LDM queue will be installed in the ~/bin directory.
     When the installer correctly follows instructions, this is actually
     the ~/runtime/bin directory.

5) edit the LDM configuration file ~/etc/ldmd.conf and add the entries
   needed to read and process the DVB-S stream(s).  Here are examples
   of what the ldmd.conf lines look like at this moment:

   # dvbs shared memory ingest processes
   exec    "dvbs_multicast -m 224.0.1.1"
   exec    "dvbs_multicast -m 224.0.1.2"
   exec    "dvbs_multicast -m 224.0.1.3"
   exec    "dvbs_multicast -m 224.0.1.4"
   #
   # readnoaaport shared memory readers
   exec    "readnoaaport -m 224.0.1.1 -n -u 3"
   exec    "readnoaaport -m 224.0.1.2 -n -u 4"
   exec    "readnoaaport -m 224.0.1.3 -n -u 5"
   exec    "readnoaaport -m 224.0.1.4 -n -u 6"

   The ldmd.conf actions execute "dvbs_multicast" readers for each PID 
   available from the UDP multicast stream and place the received packets 
   into a circular buffer for reading by "readnoaaport". There should
   be one instance of readnoaaport for each instance of dvbs_multicast.

6) The readnoaaport executable that turns ingested data into IDD products 
   and injects the products into the LDM queue is written to use the LDM 
   logging facilities.  The default log file for the LDM is the LOCAL0
   (typically ~/logs/ldmd.log) file.  We find it more useful to override the
   default logging so that each instance of readnoaaport writes to its
   own log file.  We do this by specifying the "-u X" option, where "X"
   is the LOCAL"X" logging facility.  

   If you are not interested in logging to seperate files, simply omit
   the "-u X" option. The "-n" flag will notify the log of each product
   that is received, which is useful for monitoring data that is
   received from the incoming NOAAPORT source. Remove the "-n" argument
   to readnoaaport if you do not want to be notified of every product
   that is received.

   The ULOG_FACILITY_OVERRIDE environment variable changes the default
   log facility from '0' (zero) to whatever the value that is specified
   by "-u X".  Since LDM logging uses syslogd, one must add additional
   configuration lines to /etc/syslog.conf.

   The standard additions to /etc/syslog.conf for the LDM are:

   - inclusion of local0.none in the default system logginf file

   - addition of a line that says where to write log messages for log
     facility '0'.

   Here is an example of how this looks on our Fedora Core Linux 1
   system:

*.info;mail.none;news.none;authpriv.none;cron.none;local0.none	/var/log/messages

# LDM logging
local0.debug											/home/ldm/logs/ldmd.log


   To setup syslogd to log to a different file for each ingest script,
   one has to add more entries to /etc/syslog.conf.  Here is an example
   of how we have /etc/syslog.conf setup on our Fedora Core 1 system
   that is running the LDM and ingesting the nwstg2 and oconus streams
   in the current test DVB-S noaaport stream:

*.info;mail.none;news.none;authpriv.none;cron.none;local0.none;local3.none;local4.none;local5.none;local6.none  /var/log/messages

# LDM logging
local0.debug                                            /home/ldm/logs/ldmd.log

#
# LDM NOAAport ingest logging
#
local3.debug                                            /data/tmp/nwstg.log
local4.debug                                            /data/tmp/goes.log
local5.debug                                            /data/tmp/nwstg2.log
local6.debug                                            /data/tmp/oconus.log

   
   NOTES:

   - given the limited number of log facilities, one might be forced
     to combine logging for more than one DVB-S ingest routine

   - modifications to /etc/syslog.conf must be done as 'root'

   - while some operating systems do not care what the white space is
     in /etc/syslog.conf, some do.  It is always safest to make sure that
     white spaces in non-comment lines are tabs.  (Important!)


7) The log files for our noaaport ingest routines can become very large
   in a hurry.  Because of this, it is best to rotate the files
   once-per-day.  Here is the crontab entry we currently use to do the
   file rotation:

# rotate NOAAport ingest logs
0 0 * * * bin/nplog_rotate 4

     Here, 4 is the number of days of all DVB-S readnoaaport invocation
     log files to keep online.

   NOTE: If you comment out the ULOG_FACILITY_OVERRIDE variable in #6,
      then you do not need to rotate readnoaaport log files here!

8) Dvbs_multicast is the process which reads the UDP packets from
   each PID on the multicast. The reading of the UDP stream must be 
   able to keep up with the stream since there is no mechanism for
   UDP packets to be retransmitted. We have found that the process which reads
   these UDP packets can see "Gaps" in the data stream if the process
   is swapped out by the operating system. To alleviate this possibilty
   we recommend the following:

      - Install the dvbs_multicast program setuid root. This is done by
        running "make install_setuids" as root in the installation
        proceedure.  The program will stay resident in memory and
        prevent being paged out if the program has sufficient
        permissions.

      - Consider an ldm data queue small enough to fit into available
        memory to avoiding the need for the system to do lots of paging
        for the product queue. 
