FILE cmplxpack.c
FILE compack.c
70c70
<       g2int  i,j,n,nbits,imin,imax,left;
---
>       g2int  i,j,n,imin,imax,left;
388d387
<         nbits=0;
FILE comunpack.c
1d0
< #include <stdio.h>
FILE dec_jpeg2000.c
4d3
< #include <stdio.h>
FILE dec_png.c
5d4
< #include <stdio.h>
48d46
<     png_uint_32 h32, w32;
105,106c103
<     // (void)png_get_IHDR(png_ptr, info_ptr, (png_uint_32 *)width, (png_uint_32 *)height,
<     (void)png_get_IHDR(png_ptr, info_ptr, &w32, &h32,
---
>     (void)png_get_IHDR(png_ptr, info_ptr, (png_uint_32 *)width, (png_uint_32 *)height,
109,111d105
<     *height = h32;
<     *width = w32;
< 
FILE drstemplates.c
4a5,7
> g2int getdrsindex(g2int number);
> 
> 
16d18
< ! 2009-01-14  Vuong     Changed structure name template to gtemplate
23c25
< ! RETURNS:  Index of DRT 5.NN in array gtemplates, if gtemplate exists.
---
> ! RETURNS:  Index of DRT 5.NN in array templates, if template exists.
47c49
< gtemplate *getdrstemplate(g2int number)
---
> template *getdrstemplate(g2int number)
61d62
< ! 2009-01-14  Vuong     Changed structure name template to gtemplate
81c82
<            gtemplate *new;
---
>            template *new;
86c87
<               new=(gtemplate *)malloc(sizeof(gtemplate));
---
>               new=(template *)malloc(sizeof(template));
100,101d100
< 
<          return(0);        //NULL
104c103
< gtemplate *extdrstemplate(g2int number,g2int *list)
---
> template *extdrstemplate(g2int number,g2int *list)
118d116
< ! 2009-01-14  Vuong     Changed structure name template to gtemplate
137c135
<            gtemplate *new;
---
>            template *new;
FILE drstemplates.h
34,35c34,35
<       #define MAXDRSTEMP 9              // maximum number of templates
<       #define MAXDRSMAPLEN 200          // maximum template map length
---
>       #define MAXDRSTEMP 9              /* maximum number of templates */
>       #define MAXDRSMAPLEN 200          /* maximum template map length */
FILE enc_jpeg2000.c
5d4
< #include <stdio.h>
FILE enc_png.c
5d4
< #include <stdio.h>
46,47c45,46
<    int *do_nothing;
<    do_nothing=NULL;
---
> /*   int *do_nothing;
>    do_nothing=NULL;  NOT used */
FILE g2_addfield.c
1d0
< #include <stdio.h>
36d34
< // 2009-01-14  Vuong     Changed structure name template to gtemplate
122c120
<       gtemplate  *mappds,*mapdrs;
---
>       template  *mappds,*mapdrs;
266d263
<       free(mappds);
422d418
<       free(mapdrs);
FILE g2_addgrid.c
1d0
< #include <stdio.h>
20d18
< // 2009-01-14  Vuong     Changed structure name template to gtemplate
85c83
<       gtemplate *mapgrid=0;
---
>       template *mapgrid=0;
217d214
<       free(mapgrid);
FILE g2_addlocal.c
1d0
< #include <stdio.h>
3a3
> 
FILE g2_create.c
1d0
< #include <stdio.h>
FILE g2_free.c
FILE g2_getfld.c
1d0
< #include <stdio.h>
5d3
< 
FILE g2_gribend.c
1d0
< #include <stdio.h>
FILE g2_info.c
1d0
< #include <stdio.h>
FILE g2_miss.c
2a3,5
> void g2_miss( gribfield *gfld, float *rmiss, int *nmiss );
> 
> 
FILE g2_pack_gp.c
FILE g2_rdieee.c
53c53
<         isign=(rieee[j]&msk1)>>31;
---
>         isign=(long)((rieee[j]&msk1)>>31);
FILE g2_reduce.c
FILE g2_unpack1.c
1d0
< #include <stdio.h>
FILE g2_unpack2.c
1d0
< #include <stdio.h>
16d14
< // 2008-12-23  Wesley   - Initialize lencsec2 Length of Local Use data
65c63
<       *csec2=(unsigned char *)malloc(*lencsec2+1);
---
>       *csec2=(unsigned char *)malloc(*lencsec2);
FILE g2_unpack3.c
1d0
< #include <stdio.h>
18d16
< // 2009-01-14  Vuong     Changed structure name template to gtemplate
74c72
<       gtemplate *mapgrid;
---
>       template *mapgrid;
154c152
<         //   gtemplate.
---
>         //   template.
FILE g2_unpack4.c
1d0
< #include <stdio.h>
18d16
< // 2009-01-14  Vuong     Changed structure name template to gtemplate
65c63
<       gtemplate *mappds;
---
>       template *mappds;
131c129
<       //   gtemplate.
---
>       //   template.
FILE g2_unpack5.c
1d0
< #include <stdio.h>
18d16
< // 2009-01-14  Vuong     Changed structure name template to gtemplate
57c55
<       gtemplate *mapdrs;
---
>       template *mapdrs;
120c118
<       //   The number of values in a specific gtemplate may vary
---
>       //   The number of values in a specific template may vary
122c120
<       //   gtemplate.
---
>       //   template.
FILE g2_unpack6.c
1d0
< #include <stdio.h>
FILE g2_unpack7.c
1d0
< #include <stdio.h>
27d25
< // 2008-12-23  Wesley   - Initialize Number of data points unpacked
91c89
<       lfld=(g2float *)calloc(ndpts ? ndpts : 1,sizeof(g2float));
---
>       lfld=(g2float *)calloc(ndpts,sizeof(g2float));
FILE gbits.c
FILE getdim.c
1d0
< #include <stdio.h>
FILE getpoly.c
1d0
< #include <stdio.h>
5,7d3
< g2int g2_unpack3(unsigned char *,g2int *,g2int **,g2int **,
<                          g2int *,g2int **,g2int *);
< 
FILE grib2.h
5c5
< #define G2_VERSION "g2clib-1.2.0"
---
> #define G2_VERSION "g2clib-1.0.2"
9,12d8
< // PROGRAM HISTORY LOG:
< // 2002-10-25  Gilbert
< // 2009-01-14  Vuong     Changed struct template to gtemplate
< //
163c159
< struct gtemplate {
---
> struct template {
179c175
< typedef struct gtemplate gtemplate;
---
> typedef struct template template;
212,214c208,210
< void seekgb(FILE *,g2int ,g2int ,g2int *,g2int *);
< g2int g2_info(unsigned char *,g2int *,g2int *,g2int *,g2int *);
< g2int g2_getfld(unsigned char *,g2int ,g2int ,g2int ,gribfield **);
---
> void seekgb(FILE *, g2int , g2int , g2int *, g2int *);
> g2int g2_info(unsigned char *, g2int *, g2int *, g2int *, g2int *);
> g2int g2_getfld(unsigned char *, g2int, g2int, g2int, gribfield **);
218c214
<                                 unsigned char **csec2);
---
> 				unsigned char **csec2);
220c216
<                          g2int *mapgridlen,g2int **ideflist,g2int *idefnum);
---
> 			 g2int *mapgridlen,g2int **ideflist,g2int *idefnum);
222c218
<                g2int *mappdslen,g2float **coordlist,g2int *numcoord);
---
> 	       g2int *mappdslen,g2float **coordlist,g2int *numcoord);
224c220
<                g2int **idrstmpl,g2int *mapdrslen);
---
> 	       g2int **idrstmpl,g2int *mapdrslen);
226c222
<                g2int **bmap);
---
> 	       g2int **bmap);
228c224
<                g2int idrsnum,g2int *idrstmpl,g2int ndpts,g2float **fld);
---
> 	       g2int idrsnum,g2int *idrstmpl,g2int ndpts,g2float **fld);
236c232
<                  g2int , g2int, g2int , char *, g2int );
---
> 		 g2int , g2int, g2int , char *, g2int );
250c246
<               g2int *);
---
> 	      g2int *);
254,256c250,252
<                                 unsigned char *cpack, g2int *lcpack);
< int comunpack(unsigned char *cpack, g2int lensec, g2int idrsnum,
<                         g2int *idrstmpl, g2int ndpts, g2float *fld);
---
> 				unsigned char *cpack, g2int *lcpack);
> int comunpack(unsigned char *cpack, g2int lensec, g2int idrsnum, 
> 			g2int *idrstmpl, g2int ndpts, g2float *fld);
261,263c257,259
< int g2_reduce(g2int *, g2int *, g2int *, g2int *, g2int *,
<                         g2int *, g2int *, g2int *, g2int *,
<                         g2int *, g2int *, g2int *, g2int *);
---
> int g2_reduce(g2int *, g2int *, g2int *, g2int *, g2int *, 
> 			g2int *, g2int *, g2int *, g2int *,
> 			g2int *, g2int *, g2int *, g2int *);
265,271c261,266
< extern gtemplate *getpdstemplate(g2int);
< extern gtemplate *extpdstemplate(g2int,g2int *);
< extern gtemplate *getdrstemplate(g2int);
< extern gtemplate *extdrstemplate(g2int,g2int *);
< extern gtemplate *getgridtemplate(g2int);
< extern gtemplate *extgridtemplate(g2int,g2int *);
< extern void simpack(g2float *,g2int,g2int *,unsigned char *,g2int *);
---
> extern template *getpdstemplate(g2int);
> extern template *extpdstemplate(g2int,g2int *);
> extern template *getdrstemplate(g2int);
> extern template *extdrstemplate(g2int,g2int *);
> extern template *getgridtemplate(g2int);
> extern template *extgridtemplate(g2int,g2int *);
FILE gridtemplates.c
6a7
> 
18,20d18
< ! 2007-08-16  Vuong     -  Added GDT 3.204  Curvilinear Orthogonal Grid
< ! 2008-07-08  Vuong     -  Added GDT 3.32768 Rotate Lat/Lon E-grid (Arakawa)
< ! 2009-01-14  Vuong     -  Changed structure name template to gtemplate
50c48
< gtemplate *getgridtemplate(g2int number)
---
> template *getgridtemplate(g2int number)
64,66d61
< ! 2007-08-16  Vuong     -  Added GDT 3.204  Curvilinear Orthogonal Grid
< ! 2008-07-08  Vuong     -  Added GDT 3.32768 Rotate Lat/Lon E-grid (Arakawa)
< ! 2009-01-14  Vuong     -  Changed structure name template to gtemplate
68c63
< ! USAGE:    gtemplate *getgridtemplate(number)
---
> ! USAGE:    template *getgridtemplate(number)
86c81
<            gtemplate *new;
---
>            template *new;
91c86
<               new=(gtemplate *)malloc(sizeof(gtemplate));
---
>               new=(template *)malloc(sizeof(template));
105,106d99
< 
<          return(0);        //NULL
110c103
< gtemplate *extgridtemplate(g2int number,g2int *list)
---
> template *extgridtemplate(g2int number,g2int *list)
124,125d116
< ! 2008-07-08  Vuong     -  Added GDT 3.32768 Rotate Lat/Lon E-grid (Arakawa)
< ! 2009-01-14  Vuong     -  Changed structure name template to gtemplate
144c135
<            gtemplate *new;
---
>            template *new;
FILE gridtemplates.h
31,35d30
< // PROGRAM HISTORY LOG:
< //
< // 2001-10-26  Gilbert
< // 2007-08-16  Vuong     -  Added GDT 3.204  Curvilinear Orthogonal Grid
< // 2008-07-08  Vuong     -  Added GDT 3.32768 Rot Lat/Lon E-grid (Arakawa)
39,40c34,35
<       #define MAXGRIDTEMP 25              // maximum number of templates
<       #define MAXGRIDMAPLEN 200           // maximum template map length
---
>       #define MAXGRIDTEMP 23              /* maximum number of templates */
>       #define MAXGRIDMAPLEN 200           /* maximum template map length */
91,94d85
<              // 3.204: Curvilinear Orthogonal Grid
<          {204, 19, 0, {1,1,4,1,4,1,4,4,4,4,4,-4,4,1,-4,4,4,4,1} },
<              // 3.32768: Rot Lat/Lon E-grid (Arakawa)
<          {32768, 19, 0, {1,1,4,1,4,1,4,4,4,4,4,-4,4,1,-4,4,4,4,1} },
FILE int_power.c
FILE jpcpack.c
5,6d4
< int enc_jpeg2000(unsigned char *,g2int ,g2int ,g2int ,
<                  g2int , g2int, g2int , char *, g2int );
FILE jpcunpack.c
1d0
< #include <stdio.h>
5d3
<    int dec_jpeg2000(char *,g2int ,g2int *);
43c41
<       g2int  j,nbits,iret;
---
>       g2int  j,nbits;
44a43
>       int	iret;
61c60,64
<          iret=(g2int)dec_jpeg2000(cpack,len,ifld);
---
>          iret = dec_jpeg2000((char *)cpack,len,ifld);
> 	 if ( iret != 0 ) 
> 		printf("jpcunpack:  dec_jpeg2000 returned an iret of %d\n", 
> 								iret);
> 
FILE main.c
FILE mainhome.c
FILE misspack.c
74c74
<       g2int  nglenref, nglenlast, nbitsglen, ij;
---
>       g2int  nglenref, nglenlast, nbitsglen;
78a79
> //	g2int	ij;
475c476
<         ij=0;
---
> //        ij=0;
FILE mkieee.c
79,91c79
<         if ( atemp >= 1.0 ) {
<            n = 0;
<            while ( int_power(2.0,n+1) <= atemp ) {
<               n++;
<            }
<         }
<         else {
<            n = -1;
<            while ( int_power(2.0,n) > atemp ) {
<               n--;
<            }
<         }
<         //n=(g2int)floor(log(atemp)/alog2);
---
>         n=(g2int)floor(log(atemp)/alog2);
FILE pdstemplates.c
6a7
> 
18,20d18
< // 2009-01-14  Vuong     Changed structure name template to gtemplate
< // 2009-12-15  Vuong     Added Product Definition Template 4.31
< //                       Added Product Definition Template 4.15
51c49
< gtemplate *getpdstemplate(g2int number)
---
> template *getpdstemplate(g2int number)
65,66d62
< // 2009-01-14  Vuong     Changed structure name template to gtemplate
< // 2009-08-05  Vuong     Added Product Definition Template 4.31
86c82
<            gtemplate *new;
---
>            template *new;
91c87
<               new=(gtemplate *)malloc(sizeof(gtemplate));
---
>               new=(template *)malloc(sizeof(template));
105,106d100
< 
<          return(0);        //NULL
110c104
< gtemplate *extpdstemplate(g2int number,g2int *list)
---
> template *extpdstemplate(g2int number,g2int *list)
124,125d117
< // 2009-01-14  Vuong     Changed structure name template to gtemplate
< // 2009-08-05  Vuong     Added Product Definition Template 4.31
144c136
<            gtemplate *new;
---
>            template *new;
274,285d265
<            else if ( number == 31 ) {
<               new->extlen=list[4]*5;
<               new->ext=(g2int *)malloc(sizeof(g2int)*new->extlen);
<               for (i=0;i<list[4];i++) {
<                  l=i*5;
<                  new->ext[l]=2;
<                  new->ext[l+1]=2;
<                  new->ext[l+2]=1;
<                  new->ext[l+3]=1;
<                  new->ext[l+4]=4;
<               }
<            }
288a269
> 
FILE pdstemplates.h
31,34d30
< // 2005-12-08  Gilbert  -  Allow negative scale factors and limits for
< //                         Templates 4.5 and 4.9
< // 2009-12-15  Vuong     Added Product Definition Template 4.31
< //                       Added Product Definition Template 4.15
38,39c34,35
<       #define MAXPDSTEMP 25           // maximum number of templates
<       #define MAXPDSMAPLEN 200        // maximum template map length
---
>       #define MAXPDSTEMP 23           /* maximum number of templates */
>       #define MAXPDSMAPLEN 200        /* maximum template map length */
67c63
<          {5,22,0, {1,1,1,1,1,2,1,1,4,1,-1,-4,1,-1,-4,1,1,1,-1,-4,-1,-4} },
---
>          {5,22,0, {1,1,1,1,1,2,1,1,4,1,-1,-4,1,-1,-4,1,1,1,1,4,1,4} },
79c75
<          {9,36,1, {1,1,1,1,1,2,1,1,4,1,-1,-4,1,-1,-4,1,1,1,-1,-4,-1,-4,2,1,1,1,1,1,1,4,1,1,1,4,1,4} },
---
>          {9,36,1, {1,1,1,1,1,2,1,1,4,1,-1,-4,1,-1,-4,1,1,1,-1,4,-1,4,2,1,1,1,1,1,1,4,1,1,1,4,1,4} },
95,97d90
<              // 4.15: Ave/Accum/Extreme... at Horiz Level/Layer
<              //      at a point in time
<          {15,18,0, {1,1,1,1,1,2,1,1,4,1,-1,-4,1,-1,-4,1,1,1} },
102,103d94
<              // 4.31: Satellite Product
<          {31,5,1, {1,1,1,1,1} },
FILE pngpack.c
4a5
> 
FILE pngunpack.c
1d0
< #include <stdio.h>
41c40
<       g2int  j,nbits,iret,width,height;
---
>       g2int  j,nbits,width,height;
42a42
>       int iret;
61c61,63
<          iret=(g2int)dec_png(cpack,&width,&height,ctemp);
---
>          iret = dec_png(cpack,&width,&height,(char *)ctemp);
> 	 if ( iret != 0 ) printf("pngunpack:  dec_png returned an iret of %d\n",
>                                                                 iret);
FILE seekgb.c
1d0
< #include <stdio.h>
20d18
< // 2009-01-16  VUONG     Changed  lskip to 4 instead of sizof(g2int)
38,40c36
<       g2int  ret;
<       g2int k,k4,ipos,nread,lim,start,vers,lengrib;
<       int    end;
---
>       g2int k,k4,ipos,nread,lim,start,vers,end,lengrib;
56,57c52,53
<         ret=fseek(lugb,ipos,SEEK_SET);
<         nread=fread(cbuf,sizeof(unsigned char),mseek,lugb);
---
>         fseek(lugb,ipos,SEEK_SET);
>         nread=(g2int)fread(cbuf,sizeof(unsigned char),mseek,lugb);
69,71c65,66
<             ret=fseek(lugb,ipos+k+lengrib-4,SEEK_SET);
< //          Hard code to 4 instead of sizeof(g2int)
<             k4=fread(&end,4,1,lugb);
---
>             fseek(lugb,ipos+k+lengrib-4,SEEK_SET);
>             k4=(g2int)fread(&end,sizeof(g2int),1,lugb);
FILE simpack.c
FILE simunpack.c
FILE specpack.c
FILE specunpack.c
